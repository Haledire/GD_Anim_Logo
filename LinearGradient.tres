[gd_resource type="ShaderMaterial" load_steps=7 format=2]

[ext_resource path="res://Assets/BaseAlpha.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeTexture" id=18]
source = 2
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=20]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=21]

[sub_resource type="VisualShaderNodeVectorCompose" id=23]

[sub_resource type="VisualShader" id=24]
code = "shader_type canvas_item;



void vertex() {
// Output:0

}

void fragment() {
// Input:5
	vec3 n_out5p0 = vec3(UV, 0.0);

// VectorDecompose:6
	float n_out6p0 = n_out5p0.x;
	float n_out6p1 = n_out5p0.y;
	float n_out6p2 = n_out5p0.z;

// VectorCompose:8
	float n_in8p0 = 0.00000;
	float n_in8p2 = 0.00000;
	vec3 n_out8p0 = vec3(n_in8p0, n_out6p1, n_in8p2);

// Texture:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 _tex_read = texture(TEXTURE, n_out8p0.xy);
		n_out3p0 = _tex_read.rgb;
		n_out3p1 = _tex_read.a;
	}

// Output:0
	COLOR.rgb = n_out3p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -991.617, -355.374 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( -60, -240 )
nodes/fragment/3/node = SubResource( 18 )
nodes/fragment/3/position = Vector2( -240, -240 )
nodes/fragment/5/node = SubResource( 20 )
nodes/fragment/5/position = Vector2( -1060, -260 )
nodes/fragment/6/node = SubResource( 21 )
nodes/fragment/6/position = Vector2( -880, -240 )
nodes/fragment/8/node = SubResource( 23 )
nodes/fragment/8/position = Vector2( -460, -260 )
nodes/fragment/connections = PoolIntArray( 3, 0, 0, 0, 5, 0, 6, 0, 8, 0, 3, 0, 6, 1, 8, 1 )

[resource]
shader = SubResource( 24 )
